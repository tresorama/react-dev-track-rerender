// generate-big-data.js
// Generates a large JS file (~100KB) containing a big JSON-like object.
// Run with: `node generate-big-data.js`

import { writeFileSync } from "fs";

// create data
const bigData = {
  items: []
};

for (let i = 1; i <= 10_000; i++) {
  bigData.items.push({
    id: i,
    name: `Item ${i}`,
    value: Math.sin(i) * 1000,
    category: ["alpha", "beta", "gamma", "delta", "epsilon"][i % 5],
    tags: [`t${i % 10}`, `tag${(i * 7) % 13}`, `key${(i * 17) % 19}`],
    desc: `Generated description for item ${i} — value ${(i * 13) % 997}. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.`,
  });
}

// calculate metadata
const dataAsString = JSON.stringify(bigData, null, 2);
const fileSizeInKb = (dataAsString.length / 1024).toFixed(1);

const output = `
// big-data.generated.ts
// Autogenerated demo dataset (~${fileSizeInKb} KB)

export const bigDataTreeShakingTest = ${dataAsString};
`;

writeFileSync("big-data.generated.ts", output, "utf-8");

console.log("✅ File written: big-data.generated.js");
console.log("Size:", fileSizeInKb, "KB");
